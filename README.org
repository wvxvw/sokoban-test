Special thanks to [[http://en.wikipedia.org/wiki/Sokoban][Wikipedia]] for game description and images.

* Obtaining
  You will need to install git, on RHEL-like Linux:
  : # yum install git nodejs mysql-devel
  Debian-like:
  : # apt-get install git node mysql-dev
  Then you can check out the repository
  : $ git clone https://github.com/wvxvw/sokoban-test.git
  Alternatively you could simply download the sources:
  : $ wget https://github.com/wvxvw/sokoban-test/archive/master.zip
  : $ unzip ./master.zip
  
* Installing
  You will need to install =Node.js= and the package manager for, =NPM=.
  After you've done installing, do:
  : # npm -g install grunt-cli
  This will download a bunch of goodness needed to run =grunt=
  /(the second worst build system after MSBuild)/
  : $ npm install
  Then you can build and test the project.
  : $ grunt
  You also need to exectue the SQL script found in [[./sql/deploy.sql][deploy.sql]]
  Notice that you need to have admin permissions for the database
  /(when and if I'll have the time, I'll make the deployment automatic)/
  
* Running
  Since you already have =Node.js= installed, starting the server is
  easy:
  : $ cd ./bin
  : $ ./sokoban-server
  The server will start on port 8000, navigating to
  [[http://localhost:8000]] will launch the game.

* Troubleshooting
  - Make sure =Node.js= is in =/usr/bin/node=:
    : $ command -v node
    If the value differs from above, change the
    [[./bin/sokoban-server][sokoban-server]] to reflect the program location.
  - Make sure you've created the database. Creating database should
    be something along these lines:
    : $ mysql < ./sql/deploy.sql
  - Make sure the database is up:
    : $ ps aux | grep mysqld
    If no results, start =mysqld= service:
    : # service mysqld start
  - Make sure the database access information matches
    the information in [[./bin/config.json][config.json]], to test try
    : $ cat ./bin/config.json \
    : | python -c 'import json,sys;o=json.load(sys.stdin);\
    :   print o["dbuser"] + " " + o["dbpassword"]' \
    : | xargs -n3 sh -c 'mysql --user=$0 --password=$1'
    /(formatted for readability)/
  
* Bugs
  - Method selection is outright wrong, but I've no time to make it right.
  - Slot access is too clumsy.
  - Sever script needs to be split into several files, It also needs to
    make use of client's utilities library.
  - Android deployment hasn't been written and won't be this Sunday. Sorry.
  - Database setup is manula at this time, again, sorry, no time.

* Tasks

** TODO Arrange for npm installable package                         :install:
   DEADLINE: <2014-01-10 Fri>
   Just copy the setup from some othen NPM package. Also need to figure
   how to make a locally installable version.

** TODO Add Grunt build                                             :install:
   DEADLINE: <2014-01-10 Fri>
   This is related to the task above. Get the =grunt= file somehwere
   and replicate it here.

** TODO Write simple Python server to back up the game               :server:
   DEADLINE: <2014-01-10 Fri>
   It says in the spec it has to work with JSON/XML, loading one
   locally is a headache, Python =httpd= seems like the easiets to
   deploy, I also have to have another example somewhere.

   Actually, maybe =Node.js= will work better for this task.

** TODO Cut sprites for the game                                     :design:
   DEADLINE: <2014-01-11 Sat>
   Need the sprites for the game, so far I can think of these:

   - Background terrain.
   - Wall.
   - Box.
   - Player.
   - Destination point.
   - Coin /(animated)/.
   - Glue /(maybe animated)/.
   - Digits to display the score /(maybe can just use some font)/.

** TODO Check on Android emulator                                     :tools:
   DEADLINE: <2014-01-09 Thu>
   I've not used it in a while, probably out of date. Ideally, =grunt=
   has to be able to deploy to emulator, if it's connected.
